# Generated by Django 5.2.5 on 2025-09-01 15:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scheduling', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100, verbose_name='고객명')),
                ('customer_phone', models.CharField(max_length=20, verbose_name='연락처')),
                ('customer_email', models.EmailField(blank=True, max_length=254, verbose_name='이메일')),
                ('vehicle_model', models.CharField(blank=True, max_length=100, verbose_name='차량 모델')),
                ('vehicle_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='연식')),
                ('vehicle_number', models.CharField(blank=True, max_length=20, verbose_name='차량번호')),
                ('description', models.TextField(blank=True, verbose_name='요청 내용')),
                ('status', models.CharField(choices=[('pending', '접수 대기'), ('confirmed', '접수 완료'), ('scheduled', '일정 확정'), ('in_progress', '진행 중'), ('completed', '완료'), ('cancelled', '취소')], default='pending', max_length=20, verbose_name='상태')),
                ('priority', models.CharField(choices=[('low', '낮음'), ('normal', '보통'), ('high', '높음'), ('urgent', '긴급')], default='normal', max_length=10, verbose_name='우선순위')),
                ('requested_date', models.DateTimeField(blank=True, null=True, verbose_name='희망 일시')),
                ('scheduled_date', models.DateTimeField(blank=True, null=True, verbose_name='확정 일시')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='접수일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('assigned_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_services', to=settings.AUTH_USER_MODEL, verbose_name='담당 직원')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_services', to=settings.AUTH_USER_MODEL, verbose_name='접수자')),
                ('linked_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduling.schedule', verbose_name='연결된 일정')),
            ],
            options={
                'verbose_name': '서비스 요청',
                'verbose_name_plural': '서비스 요청',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='실제 시작시간')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='실제 종료시간')),
                ('actual_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='실제 가격')),
                ('work_summary', models.TextField(blank=True, verbose_name='작업 요약')),
                ('parts_used', models.TextField(blank=True, verbose_name='사용 부품/재료')),
                ('notes', models.TextField(blank=True, verbose_name='특이사항')),
                ('satisfaction_score', models.PositiveIntegerField(blank=True, help_text='1-5점 (5점이 최고)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='만족도')),
                ('customer_feedback', models.TextField(blank=True, verbose_name='고객 피드백')),
                ('next_service_date', models.DateField(blank=True, null=True, verbose_name='다음 서비스 권장일')),
                ('next_service_notes', models.TextField(blank=True, verbose_name='다음 서비스 메모')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='services.servicerequest', verbose_name='서비스 요청')),
            ],
            options={
                'verbose_name': '서비스 이력',
                'verbose_name_plural': '서비스 이력',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='서비스명')),
                ('category', models.CharField(choices=[('engine_oil', '엔진오일 교체'), ('maintenance', '정비 서비스'), ('insurance', '보험 상담'), ('happycall', '해피콜'), ('other', '기타')], max_length=20, verbose_name='카테고리')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('estimated_duration', models.PositiveIntegerField(default=60, verbose_name='예상 소요시간(분)')),
                ('base_price', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='기본 가격')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.department', verbose_name='담당 부서')),
            ],
            options={
                'verbose_name': '서비스 유형',
                'verbose_name_plural': '서비스 유형',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicetype', verbose_name='서비스 유형'),
        ),
    ]
